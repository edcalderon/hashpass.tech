version: 1.0
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 22.18.0
        - npm install --quiet --global @expo/cli
        - >
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi
    build:
      commands:
        # Build Expo for web in server mode (SSR)
        - npx expo export -p web

        # Prepare Amplify directory structure
        - mkdir -p dist/client
        - mkdir -p dist/server

        # Copy static assets (client-side)
        - cp -r .expo/output/static/* dist/client/ || echo "No static folder found"

        # Copy server bundle (for SSR)
        - cp -r .expo/output/server/* dist/server/ || echo "No server folder found"
        - cp .expo/output/server.mjs dist/server/index.mjs || echo "No server.mjs found"

  artifacts:
    # Tell Amplify where to find built assets and SSR entrypoint
    baseDirectory: dist
    files:
      - '**/*'
    # SSR configuration
    customHeaders:
      - pattern: '**/*.js'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
      - pattern: '**/*.css'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
      - pattern: '**/*.html'
        headers:
          - key: Cache-Control
            value: 'public, max-age=0, must-revalidate'

  cache:
    paths:
      - node_modules/**/*
      - $(npm root --global)/**/*

# Enable SSR with Node runtime
backend:
  phases:
    build:
      commands:
        - echo "Using Node SSR runtime for Expo"
  artifacts:
    baseDirectory: dist/server
    files:
      - '**/*'
  customRules:
    - source: '/<*>'
      target: '/'
      status: 200
  ssr:
    enabled: true
    entry: dist/server/index.mjs
