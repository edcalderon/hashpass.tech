version: 1.0
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 22.18.0
        - npm install --quiet --global @expo/cli
        - >
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi
        # Install AWS CLI for Lambda deployment
        - pip install awscli --upgrade --user
        - export PATH=~/.local/bin:$PATH
    build:
      commands:
        # Clean previous builds
        - rm -rf dist
        
        # Create necessary directories for API routes
        - mkdir -p dist/client/_expo/functions/api/bslatam
        
        # Build Expo web app in server mode
        - npm run build:web
        
        # Copy all server files to client directory for Amplify
        - cp -r dist/server/* dist/client/
        
        # Process and copy API route files with proper extension
        - 'for file in app/api/bslatam/*.ts; do
            # Convert the file name from "agenda+api.ts" to "agenda.js"
            filename=$(basename "$file" | sed "s/\+api\.ts$/.js/");
            # Create a simple handler file that imports and re-exports the handler
            echo "import { handler } from \"../../../../../$file\";" > "dist/client/_expo/functions/api/bslatam/$filename";
            echo "export default handler;" >> "dist/client/_expo/functions/api/bslatam/$filename";
            echo "Created API handler at dist/client/_expo/functions/api/bslatam/$filename";
          done'
        
        # Create a simple package.json for the API functions
        - 'echo "{\"type\": \"module\"}" > dist/client/_expo/functions/package.json'
        
        # Add cache-busting timestamp to index.html
        - 'echo "<!-- Build timestamp: $(date) -->" >> dist/client/index.html'
        
        # Debug: List all API files
        - echo "\n=== API files in dist/client/_expo/functions/api/bslatam/ ==="
        - ls -la dist/client/_expo/functions/api/bslatam/ || echo "No API files found"
        - echo "\n=== Contents of dist/client/ ==="
        - ls -la dist/client/
        - 'echo "Checking for index.html:"'
        - ls -la dist/client/index.html

  artifacts:
    baseDirectory: dist/client
    files:
      - '**/*'
    customHeaders:
      - pattern: '_expo/static/**/*'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
      - pattern: 'index.html'
        headers:
          - key: Cache-Control
            value: 'no-cache, no-store, must-revalidate'
          - key: Pragma
            value: 'no-cache'
          - key: Expires
            value: '0'
      - pattern: '**/*.html'
        headers:
          - key: Cache-Control
            value: 'no-cache, no-store, must-revalidate'
          - key: Pragma
            value: 'no-cache'
          - key: Expires
            value: '0'
      - pattern: '**/*.js'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'

  cache:
    paths:
      - node_modules/**/*
      - $(npm root --global)/**/*

# Redirects for SPA routing
redirects:
  # API routes - must come before the catch-all rule
  - source: '/api/bslatam/agenda/'
    status: 200
    target: '/api/bslatam/agenda+api/'
  - source: '/api/bslatam/agenda+api/'
    status: 200
    target: '/_expo/functions/api/bslatam/agenda+api/'
  - source: '/api/bslatam/agenda-status/'
    status: 200
    target: '/api/bslatam/agenda-status+api/'
  - source: '/api/bslatam/agenda-status+api/'
    status: 200
    target: '/_expo/functions/api/bslatam/agenda-status+api/'
  
  # Static files
  - source: '/sw.js'
    status: 200
    target: '/sw.js'
  - source: '/_expo/*'
    status: 200
    target: '/_expo/'
    
  # SPA fallback - must be last
  - source: '/<*>'
    status: 200
    target: '/index.html'
  - source: '/dashboard/*'
    status: 200
    target: '/index.html'
  - source: '/auth/*'
    status: 200
    target: '/index.html'
  - source: '/bslatam/*'
    status: 200
    target: '/index.html'

# Error page for 404s
customErrorResponses:
  - errorCode: 404
    responsePagePath: '/index.html'
    responseCode: 200
    errorCachingMinTTL: 0