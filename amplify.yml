version: 1.0
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 22.18.0
        - npm install --quiet --global @expo/cli
        - >
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi
    build:
      commands:
        # Clean previous builds
        - rm -rf dist
        # Build Expo web app in server mode to include API routes
        - npm run build:web
        # Ensure we have both client and server directories
        - ls -la dist/
        - ls -la dist/client/ || echo "No client directory"
        - ls -la dist/server/ || echo "No server directory"
  artifacts:
    baseDirectory: dist/client
    files:
      - '**/*'
    customHeaders:
      - pattern: '_expo/static/**/*'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
      - pattern: 'index.html'
        headers:
          - key: Cache-Control
            value: 'public, max-age=0, must-revalidate'
      - pattern: '**/*.html'
        headers:
          - key: Cache-Control
            value: 'public, max-age=0, must-revalidate'
      - pattern: '**/*.js'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'

  cache:
    paths:
      - node_modules/**/*
      - $(npm root --global)/**/*

# Serverless functions for API routes
functions:
  - name: api
    runtime: nodejs18.x
    handler: dist/server/_expo/functions/server.js
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

# Redirects for SPA routing (only for non-API routes)
redirects:
  - source: '/dashboard/<*>'
    status: 200
    target: '/index.html'
  - source: '/auth/<*>'
    status: 200
    target: '/index.html'
  - source: '/bslatam/<*>'
    status: 200
    target: '/index.html'
  - source: '/components/<*>'
    status: 200
    target: '/index.html'

# Error page for 404s
customErrorResponses:
  - errorCode: 404
    responsePagePath: '/index.html'
    responseCode: 200
    errorCachingMinTTL: 0